foods <- read.csv("../data/ghg_food", stringsAsFactors = FALSE)
foods <- read.csv("../data/ghg_food.csv", stringsAsFactors = FALSE)
foods <- read.csv("../data/ghg_food.csv", stringsAsFactors = FALSE)
foods <- read.csv("../data/ghg_food.csv", stringsAsFactors = FALSE)
library(dplyr)
foods <- read.csv("../data/ghg_food.csv", stringsAsFactors = FALSE)
foods <- read.csv("data/ghg_food.csv", stringsAsFactors = FALSE)
View(foods)
library(dplyr)
library(plotly)
library(stringr)
library(formattable)
library(ggplot2)
library(tidyr)
foods <- read.csv("data/ghg_food.csv", stringsAsFactors = FALSE)
View(foods)
barplot(foods, main = "Number Impacted by Shootings",
names.arg = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul",
"Aug", "Sep", "Oct", "Nov", "Dec"),
ylab = "Total (# of people)",
xlab = "month",
col = "red3")
View(foods)
foods <- read.csv("data/ghg_food.csv", stringsAsFactors = FALSE)
ggplot(data = foods, mapping = aes(x = weight, y = hindfoot_length))
foods <- read.csv("data/simple_ghg_food.csv", stringsAsFactors = FALSE)
View(foods)
ggplot(data = foods, mapping = aes(x = GHG.emissions, y = Freshwater.Withdrawls))
ggplot(data = foods, mapping = aes(x = GHG.Emissions, y = Freshwater.Withdrawls))
ggplot(data = foods, mapping = aes(x = GHG.Emissions, y = Freshwater.Withdrawals))
ggplot(data = foods, mapping = aes(x = GHG.Emissions, y = Freshwater.Withdrawals)) + geom_point()
ggplot(data = foods, mapping = aes(x = GHG.Emissions, y = Freshwater.Withdrawals)) +
geom_point(alpha = 0.1)
ggplot(data = foods, mapping = aes(x = GHG.Emissions, y = Freshwater.Withdrawals)) +
geom_point(alpha = 0.9)
ggplot(data = foods, mapping = aes(x = GHG.Emissions, y = Freshwater.Withdrawals)) +
geom_point(alpha = 0.9) +
ggtitle("Food emissions")
ggplot(data = foods, mapping = aes(x = GHG.Emissions, y = Freshwater.Withdrawals)) +
geom_point(alpha = 0.9) +
ggtitle("Food emissions") +
add_markers(
text = ~paste("State: ", product, "<br />",
symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~num_impacted))
)
ggplot(data = foods, mapping = aes(x = GHG.Emissions, y = Freshwater.Withdrawals)) +
geom_point(alpha = 0.9) +
ggtitle("Food emissions") %>%
add_markers(
text = ~paste("State: ", product, "<br />",
symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~num_impacted))
)
ggplot(data = foods, mapping = aes(x = GHG.Emissions, y = Freshwater.Withdrawals)) +
geom_point(alpha = 0.9) +
ggtitle("Food emissions") %>%
add_markers(
text = ~paste("State: ", product, "<br />",
symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~num_impacted))
)
ggplot(data = foods, mapping = aes(x = GHG.Emissions, y = Freshwater.Withdrawals)) +
geom_point(alpha = 0.9) +
ggtitle("Food emissions")
return(people)
ggplot(data = foods, mapping = aes(x = GHG.Emissions, y = Freshwater.Withdrawals)) +
geom_point(alpha = 0.9) +
ggtitle("Food emissions")
add_markers(
text = ~paste("State: ", product, "<br />",
symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~num_impacted))
)
foods <- read.csv("data/simple_ghg_food.csv", stringsAsFactors = FALSE)
library(dplyr)
library(plotly)
library(stringr)
library(formattable)
library(ggplot2)
library(tidyr)
ggplot(data = foods, mapping = aes(x = GHG.Emissions, y = Freshwater.Withdrawals)) +
geom_point(alpha = 0.9) +
ggtitle("Food emissions")
add_markers(
text = ~paste("State: ", product, "<br />",
symbol = I("circle"), hoverinfo = "text",
marker = list(size = ~num_impacted))
)
shiny::runApp('~/Desktop/INFO201/test_one')
